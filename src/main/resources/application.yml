application:
  name: familie-ef-personhendelse
server:
  servlet:
    context-path: /
spring:
  application:
    name: familie-ef-personhendelse
  main:
    allow-bean-definition-overriding: true
  kafka:
    client-id: familie-ef-personhendelse
    bootstrap-servers: a01apvl00145.adeo.no:8443,a01apvl00146.adeo.no:8443,a01apvl00147.adeo.no:8443,a01apvl00148.adeo.no:8443,a01apvl00149.adeo.no:8443,a01apvl00150.adeo.no:8443
    properties:
      schema.registry.url: http://kafka-schema-registry.tpa:8081
      security.protocol: SASL_SSL
      sasl:
        mechanism: PLAIN
        jaas.config: org.apache.kafka.common.security.plain.PlainLoginModule required username="${SRV_CREDENTIAL_USERNAME}" password="${SRV_CREDENTIAL_PASSWORD}";
    consumer:
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: io.confluent.kafka.serializers.KafkaAvroDeserializer
      group-id: srvfamilie-ef-person
      max-poll-records: 1
      auto-offset-reset: latest
      enable-auto-commit: false

no.nav.security.jwt:
  issuer:
    azure:
      discoveryurl: ${AZURE_APP_WELL_KNOWN_URL}
      accepted_audience: ${AZURE_APP_CLIENT_ID}
  client:
    registration:
      familie-oppdrag:
        resource-url: ${FAMILIE_OPPDRAG_API_URL}
        token-endpoint-url: ${AZURE_OPENID_CONFIG_TOKEN_ENDPOINT}
        grant-type: client_credentials
        scope: ${FAMILIE_OPPDRAG_SCOPE}
        authentication:
          client-id: ${AZURE_APP_CLIENT_ID}
          client-secret: ${AZURE_APP_CLIENT_SECRET}
          client-auth-method: client_secret_basic

FAMILIE_INTEGRASJONER_API_URL: https://familie-integrasjoner.dev-fss-pub.nais.io
EF_SAK_URL: https://familie-ef-sak.dev.intern.nav.no